-- i like pussi
local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			local v68 = 0;
			while true do
				if (v68 == 0) then
					v19 = v0(v3(v30, 1, 1));
					return "";
				end
			end
		else
			local v69 = v2(v0(v30, 16));
			if v19 then
				local v76 = v5(v69, v19);
				v19 = nil;
				return v76;
			else
				return v69;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v70 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % (2 ^ (((v33 - (1 - 0)) - (v32 - (2 - 1))) + (620 - (555 + 64))));
			return v70 - (v70 % (932 - (857 + 74)));
		else
			local v71 = 568 - (58 + 309 + 201);
			local v72;
			while true do
				if (v71 == 0) then
					v72 = (929 - (214 + 713)) ^ (v32 - ((878 - (282 + 595)) + 0));
					return (((v31 % (v72 + v72)) >= v72) and 1) or 0;
				end
			end
		end
	end
	local function v21()
		local v34 = 1637 - (1523 + (1384 - (226 + 1044)));
		local v35;
		while true do
			if (v34 == 1) then
				return v35;
			end
			if (v34 == (0 + 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (1 - 0);
				v34 = 1066 - (68 + 997);
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + (8 - 6));
		v18 = v18 + (119 - (32 + 85));
		return (v37 * 256) + v36;
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + 3 + 0);
		v18 = v18 + 4;
		return (v41 * (3720433 + 13056783)) + (v40 * 65536) + (v39 * (1213 - (892 + 65))) + v38;
	end
	local function v24()
		local v42 = v23();
		local v43 = v23();
		local v44 = (1 + 1) - 1;
		local v45 = (v20(v43, 1, 36 - 16) * ((3 - 1) ^ (58 - 26))) + v42;
		local v46 = v20(v43, 371 - (72 + 15 + 263), 211 - ((497 - (44 + 386)) + 113));
		local v47 = ((v20(v43, 24 + 8) == 1) and -(2 - 1)) or (1 + 0);
		if (v46 == (0 - 0)) then
			if (v45 == 0) then
				return v47 * (952 - (802 + 150));
			else
				local v77 = 0 - 0;
				while true do
					if (v77 == 0) then
						v46 = 1 - 0;
						v44 = 18 - ((782 - (201 + 571)) + 8);
						break;
					end
				end
			end
		elseif (v46 == (1490 + (2043 - (998 + 488)))) then
			return ((v45 == (997 - (915 + 82))) and (v47 * ((4 - 3) / (0 - 0)))) or (v47 * NaN);
		end
		return v8(v47, v46 - (596 + 427)) * (v44 + (v45 / ((2 - (0 + 0)) ^ (490 - (145 + 293)))));
	end
	local function v25(v48)
		local v49;
		if not v48 then
			v48 = v23();
			if (v48 == (0 - 0)) then
				return "";
			end
		end
		v49 = v3(v16, v18, (v18 + v48) - (3 - 2));
		v18 = v18 + v48;
		local v50 = {};
		for v66 = 860 - (814 + 45), #v49 do
			v50[v66] = v2(v1(v3(v49, v66, v66)));
		end
		return v6(v50);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v51 = 0 + 0;
		local v52;
		local v53;
		local v54;
		local v55;
		local v56;
		local v57;
		local v58;
		while true do
			if (v51 ~= 0) then
			else
				v52 = 1024 - (706 + 318);
				v53 = nil;
				v51 = 1;
			end
			if (v51 == (1254 - (721 + 530))) then
				v58 = nil;
				while true do
					local v78 = 0;
					while true do
						if (v78 == (1 - 0)) then
							if (v52 == (1264 - (1091 + 171))) then
								local v100 = 0 - 0;
								while true do
									if (v100 ~= 1) then
									else
										for v107 = 1 + 0, v23() do
											local v108 = 0;
											local v109;
											local v110;
											while true do
												if (v108 ~= (1 + 0)) then
												else
													while true do
														if (v109 == 0) then
															v110 = v21();
															if (v20(v110, 1 + 0, 1501 - (1408 + 92)) == (0 - 0)) then
																local v318 = 0;
																local v319;
																local v320;
																local v321;
																while true do
																	if (v318 ~= (9 - 6)) then
																	else
																		if (v20(v320, 3, 377 - (123 + 251)) == 1) then
																			v321[19 - 15] = v58[v321[702 - (208 + 490)]];
																		end
																		v53[v107] = v321;
																		break;
																	end
																	if (v318 ~= (1 + 0)) then
																	else
																		v321 = {v22(),v22(),nil,nil};
																		if (v319 == (0 + 0)) then
																			local v392 = 0;
																			local v393;
																			while true do
																				if ((0 + 0) == v392) then
																					v393 = 836 - (660 + 176);
																					while true do
																						if (v393 ~= (0 + 0)) then
																						else
																							v321[1 + 2] = v22();
																							v321[206 - (14 + 188)] = v22();
																							break;
																						end
																					end
																					break;
																				end
																			end
																		elseif (v319 == (1 + 0)) then
																			v321[678 - (534 + 141)] = v23();
																		elseif (v319 == 2) then
																			v321[2 + 1] = v23() - ((2 + 0) ^ (1785 - (1749 + 20)));
																		elseif (v319 == (3 + 0)) then
																			local v414 = 1322 - (1249 + 73);
																			local v415;
																			local v416;
																			while true do
																				if (v414 ~= (1 - 0)) then
																				else
																					while true do
																						if (v415 ~= 0) then
																						else
																							v416 = 0 + 0;
																							while true do
																								if (v416 == (0 - 0)) then
																									v321[8 - 5] = v23() - (2 ^ (38 - 22));
																									v321[3 + 1] = v22();
																									break;
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if (v414 == (0 - 0)) then
																					v415 = 1900 - (106 + 1794);
																					v416 = nil;
																					v414 = 1 + 0;
																				end
																			end
																		end
																		v318 = 1 + 1;
																	end
																	if ((396 - (115 + 281)) == v318) then
																		local v378 = 0;
																		while true do
																			if (v378 ~= 1) then
																			else
																				v318 = 1;
																				break;
																			end
																			if (v378 ~= (0 - 0)) then
																			else
																				v319 = v20(v110, 1 + 1, 3 + 0);
																				v320 = v20(v110, 4, 6);
																				v378 = 2 - 1;
																			end
																		end
																	end
																	if ((116 - (4 + 110)) ~= v318) then
																	else
																		local v379 = 0 - 0;
																		while true do
																			if (v379 == (867 - (550 + 317))) then
																				if (v20(v320, 1, 1) ~= (1 - 0)) then
																				else
																					v321[2 - 0] = v58[v321[5 - 3]];
																				end
																				if (v20(v320, 105 - (17 + 86), 287 - (134 + 151)) ~= (1 + 0)) then
																				else
																					v321[1668 - (970 + 695)] = v58[v321[5 - 2]];
																				end
																				v379 = 1991 - (582 + 1408);
																			end
																			if ((3 - 2) ~= v379) then
																			else
																				v318 = 169 - (122 + 44);
																				break;
																			end
																		end
																	end
																end
															end
															break;
														end
													end
													break;
												end
												if (v108 == (0 - 0)) then
													local v117 = 0 - 0;
													while true do
														if (v117 == (1 - 0)) then
															v108 = 1825 - (1195 + 629);
															break;
														end
														if ((0 - 0) ~= v117) then
														else
															v109 = 241 - (187 + 54);
															v110 = nil;
															v117 = 781 - (162 + 618);
														end
													end
												end
											end
										end
										v52 = 3 + 0;
										break;
									end
									if (v100 ~= (0 + 0)) then
									else
										for v111 = 1 + 0, v57 do
											local v112 = 0 - 0;
											local v113;
											local v114;
											local v115;
											local v116;
											while true do
												if (v112 == (1 - 0)) then
													v115 = nil;
													v116 = nil;
													v112 = 2;
												end
												if (v112 ~= (65 - (30 + 35))) then
												else
													v113 = 0 + 0;
													v114 = nil;
													v112 = 1637 - (1373 + 263);
												end
												if (v112 == (1002 - (451 + 549))) then
													while true do
														if ((0 - 0) ~= v113) then
														else
															local v198 = 0 + 0;
															while true do
																if ((0 - 0) ~= v198) then
																else
																	v114 = 0 - 0;
																	v115 = nil;
																	v198 = 1 - 0;
																end
																if (1 == v198) then
																	v113 = 1;
																	break;
																end
															end
														end
														if (v113 == (1385 - (746 + 638))) then
															v116 = nil;
															while true do
																if (v114 == (0 + 0)) then
																	v115 = v21();
																	v116 = nil;
																	v114 = 1 - 0;
																end
																if (v114 ~= (414 - (15 + 398))) then
																else
																	if (v115 == 1) then
																		v116 = v21() ~= (341 - (218 + 123));
																	elseif (v115 == (1583 - (1535 + 46))) then
																		v116 = v24();
																	elseif (v115 == (3 + 0)) then
																		v116 = v25();
																	end
																	v58[v111] = v116;
																	break;
																end
															end
															break;
														end
													end
													break;
												end
											end
										end
										v56[2 + 1] = v21();
										v100 = 1;
									end
								end
							end
							if (v52 ~= (1 + 0)) then
							else
								local v101 = 0;
								while true do
									if (1 ~= v101) then
									else
										v58 = {};
										v52 = 2 + 0;
										break;
									end
									if (v101 == (560 - (306 + 254))) then
										v56 = {v53,v54,nil,v55};
										v57 = v23();
										v101 = 1468 - (899 + 568);
									end
								end
							end
							break;
						end
						if (v78 == (126 - (116 + 10))) then
							if (v52 == 3) then
								local v102 = 0 + 0;
								local v103;
								while true do
									if (v102 ~= (738 - (542 + 196))) then
									else
										v103 = 0;
										while true do
											if (v103 == (0 + 0)) then
												for v118 = 1 + 0, v23() do
													v54[v118 - (2 - 1)] = v28();
												end
												return v56;
											end
										end
										break;
									end
								end
							end
							if (v52 ~= (603 - (268 + 335))) then
							else
								local v104 = 290 - (60 + 230);
								while true do
									if (v104 == 1) then
										v55 = {};
										v52 = 2 - 1;
										break;
									end
									if (v104 ~= 0) then
									else
										local v106 = 572 - (426 + 146);
										while true do
											if (v106 ~= (0 + 0)) then
											else
												v53 = {};
												v54 = {};
												v106 = 1457 - (282 + 1174);
											end
											if (v106 == (812 - (569 + 242))) then
												v104 = 1;
												break;
											end
										end
									end
								end
							end
							v78 = 406 - (118 + 287);
						end
					end
				end
				break;
			end
			if (v51 ~= 1) then
			else
				v54 = nil;
				v55 = nil;
				v51 = 5 - 3;
			end
			if (v51 == (1123 - (118 + 1003))) then
				v56 = nil;
				v57 = nil;
				v51 = 3;
			end
		end
	end
	local function v29(v59, v60, v61)
		local v62 = 0;
		local v63;
		local v64;
		local v65;
		while true do
			if (1 == v62) then
				v65 = v59[3];
				return function(...)
					local v79 = v63;
					local v80 = v64;
					local v81 = v65;
					local v82 = v27;
					local v83 = 1;
					local v84 = -1;
					local v85 = {};
					local v86 = {...};
					local v87 = v12("#", ...) - 1;
					local v88 = {};
					local v89 = {};
					for v93 = 0, v87 do
						if (v93 >= v81) then
							v85[v93 - v81] = v86[v93 + 1];
						else
							v89[v93] = v86[v93 + 1];
						end
					end
					local v90 = (v87 - v81) + 1;
					local v91;
					local v92;
					while true do
						v91 = v79[v83];
						v92 = v91[1];
						if (v92 <= 41) then
							if (v92 <= 20) then
								if (v92 <= 9) then
									if (v92 <= 4) then
										if (v92 <= 1) then
											if (v92 > 0) then
												local v120 = v91[2];
												local v121 = {};
												for v190 = 1, #v88 do
													local v191 = v88[v190];
													for v199 = 0, #v191 do
														local v200 = 0;
														local v201;
														local v202;
														local v203;
														while true do
															if (v200 == 1) then
																v203 = v201[2];
																if ((v202 == v89) and (v203 >= v120)) then
																	local v380 = 0;
																	while true do
																		if (0 == v380) then
																			v121[v203] = v202[v203];
																			v201[1] = v121;
																			break;
																		end
																	end
																end
																break;
															end
															if (v200 == 0) then
																v201 = v191[v199];
																v202 = v201[1];
																v200 = 1;
															end
														end
													end
												end
											elseif v89[v91[2]] then
												v83 = v83 + 1;
											else
												v83 = v91[3];
											end
										elseif (v92 <= 2) then
											v60[v91[3]] = v89[v91[2]];
										elseif (v92 > 3) then
											v89[v91[2]] = v89[v91[3]][v91[4]];
										else
											v89[v91[2]][v91[3]] = v89[v91[4]];
										end
									elseif (v92 <= 6) then
										if (v92 > 5) then
											local v124 = v91[2];
											v89[v124] = v89[v124](v13(v89, v124 + 1, v84));
										else
											v89[v91[2]] = v89[v91[3]];
										end
									elseif (v92 <= 7) then
										v89[v91[2]] = v91[3] - v89[v91[4]];
									elseif (v92 == 8) then
										v89[v91[2]] = v61[v91[3]];
									elseif (v91[2] == v89[v91[4]]) then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								elseif (v92 <= 14) then
									if (v92 <= 11) then
										if (v92 == 10) then
											do
												return;
											end
										else
											v89[v91[2]] = v89[v91[3]] + v89[v91[4]];
										end
									elseif (v92 <= 12) then
										local v130 = v91[2];
										v89[v130] = v89[v130](v89[v130 + 1]);
									elseif (v92 > 13) then
										if (v89[v91[2]] <= v91[4]) then
											v83 = v83 + 1;
										else
											v83 = v91[3];
										end
									elseif not v89[v91[2]] then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								elseif (v92 <= 17) then
									if (v92 <= 15) then
										local v132 = v91[2];
										local v133 = v89[v91[3]];
										v89[v132 + 1] = v133;
										v89[v132] = v133[v91[4]];
									elseif (v92 > 16) then
										v89[v91[2]] = v60[v91[3]];
									elseif (v89[v91[2]] <= v91[4]) then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								elseif (v92 <= 18) then
									local v137 = 0;
									local v138;
									local v139;
									local v140;
									while true do
										if (v137 == 0) then
											v138 = v91[2];
											v139 = {v89[v138](v89[v138 + 1])};
											v137 = 1;
										end
										if (v137 == 1) then
											v140 = 0;
											for v326 = v138, v91[4] do
												v140 = v140 + 1;
												v89[v326] = v139[v140];
											end
											break;
										end
									end
								elseif (v92 > 19) then
									if (v89[v91[2]] == v89[v91[4]]) then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								else
									v89[v91[2]] = v91[3] ~= 0;
								end
							elseif (v92 <= 30) then
								if (v92 <= 25) then
									if (v92 <= 22) then
										if (v92 == 21) then
											v89[v91[2]] = v29(v80[v91[3]], nil, v61);
										else
											v89[v91[2]] = v89[v91[3]] / v91[4];
										end
									elseif (v92 <= 23) then
										local v143 = v91[2];
										v89[v143] = v89[v143](v13(v89, v143 + 1, v91[3]));
									elseif (v92 == 24) then
										v89[v91[2]] = v60[v91[3]];
									else
										v61[v91[3]] = v89[v91[2]];
									end
								elseif (v92 <= 27) then
									if (v92 > 26) then
										v89[v91[2]] = v61[v91[3]];
									else
										local v147 = 0;
										local v148;
										local v149;
										local v150;
										local v151;
										while true do
											if (0 == v147) then
												v148 = v91[2];
												v149, v150 = v82(v89[v148](v13(v89, v148 + 1, v91[3])));
												v147 = 1;
											end
											if (2 == v147) then
												for v330 = v148, v84 do
													local v331 = 0;
													while true do
														if (v331 == 0) then
															v151 = v151 + 1;
															v89[v330] = v149[v151];
															break;
														end
													end
												end
												break;
											end
											if (v147 == 1) then
												v84 = (v150 + v148) - 1;
												v151 = 0;
												v147 = 2;
											end
										end
									end
								elseif (v92 <= 28) then
									v89[v91[2]] = v89[v91[3]] - v89[v91[4]];
								elseif (v92 > 29) then
									for v288 = v91[2], v91[3] do
										v89[v288] = nil;
									end
								else
									local v218 = 0;
									local v219;
									while true do
										if (v218 == 0) then
											v219 = v91[2];
											v89[v219] = v89[v219](v89[v219 + 1]);
											break;
										end
									end
								end
							elseif (v92 <= 35) then
								if (v92 <= 32) then
									if (v92 == 31) then
										local v153 = v91[2];
										v89[v153] = v89[v153]();
									else
										v89[v91[2]] = v91[3];
									end
								elseif (v92 <= 33) then
									local v157 = 0;
									local v158;
									local v159;
									local v160;
									local v161;
									while true do
										if (v157 == 1) then
											v84 = (v160 + v158) - 1;
											v161 = 0;
											v157 = 2;
										end
										if (v157 == 2) then
											for v332 = v158, v84 do
												local v333 = 0;
												while true do
													if (v333 == 0) then
														v161 = v161 + 1;
														v89[v332] = v159[v161];
														break;
													end
												end
											end
											break;
										end
										if (v157 == 0) then
											v158 = v91[2];
											v159, v160 = v82(v89[v158](v89[v158 + 1]));
											v157 = 1;
										end
									end
								elseif (v92 == 34) then
									v89[v91[2]]();
								else
									v89[v91[2]][v91[3]] = v89[v91[4]];
								end
							elseif (v92 <= 38) then
								if (v92 <= 36) then
									v89[v91[2]] = v89[v91[3]] + v89[v91[4]];
								elseif (v92 == 37) then
									v83 = v91[3];
								else
									v89[v91[2]][v91[3]] = v91[4];
								end
							elseif (v92 <= 39) then
								do
									return v89[v91[2]];
								end
							elseif (v92 > 40) then
								for v291 = v91[2], v91[3] do
									v89[v291] = nil;
								end
							else
								local v225 = v80[v91[3]];
								local v226;
								local v227 = {};
								v226 = v10({}, {__index=function(v293, v294)
									local v295 = v227[v294];
									return v295[1][v295[2]];
								end,__newindex=function(v296, v297, v298)
									local v299 = v227[v297];
									v299[1][v299[2]] = v298;
								end});
								for v301 = 1, v91[4] do
									v83 = v83 + 1;
									local v302 = v79[v83];
									if (v302[1] == 59) then
										v227[v301 - 1] = {v89,v302[3]};
									else
										v227[v301 - 1] = {v60,v302[3]};
									end
									v88[#v88 + 1] = v227;
								end
								v89[v91[2]] = v29(v225, v226, v61);
							end
						elseif (v92 <= 62) then
							if (v92 <= 51) then
								if (v92 <= 46) then
									if (v92 <= 43) then
										if (v92 == 42) then
											if (v89[v91[2]] ~= v89[v91[4]]) then
												v83 = v83 + 1;
											else
												v83 = v91[3];
											end
										else
											v89[v91[2]] = v89[v91[3]] - v89[v91[4]];
										end
									elseif (v92 <= 44) then
										local v164 = 0;
										local v165;
										local v166;
										while true do
											if (v164 == 1) then
												for v334 = 1, #v88 do
													local v335 = v88[v334];
													for v359 = 0, #v335 do
														local v360 = 0;
														local v361;
														local v362;
														local v363;
														while true do
															if (v360 == 0) then
																v361 = v335[v359];
																v362 = v361[1];
																v360 = 1;
															end
															if (v360 == 1) then
																v363 = v361[2];
																if ((v362 == v89) and (v363 >= v165)) then
																	v166[v363] = v362[v363];
																	v361[1] = v166;
																end
																break;
															end
														end
													end
												end
												break;
											end
											if (v164 == 0) then
												v165 = v91[2];
												v166 = {};
												v164 = 1;
											end
										end
									elseif (v92 > 45) then
										local v230 = v91[2];
										local v231, v232 = v82(v89[v230](v89[v230 + 1]));
										v84 = (v232 + v230) - 1;
										local v233 = 0;
										for v305 = v230, v84 do
											local v306 = 0;
											while true do
												if (v306 == 0) then
													v233 = v233 + 1;
													v89[v305] = v231[v233];
													break;
												end
											end
										end
									elseif (v91[2] == v89[v91[4]]) then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								elseif (v92 <= 48) then
									if (v92 == 47) then
										v89[v91[2]] = v91[3] - v89[v91[4]];
									elseif (v89[v91[2]] == v91[4]) then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								elseif (v92 <= 49) then
									local v168 = 0;
									local v169;
									while true do
										if (v168 == 0) then
											v169 = v91[2];
											v89[v169] = v89[v169](v13(v89, v169 + 1, v91[3]));
											break;
										end
									end
								elseif (v92 > 50) then
									local v235 = v91[2];
									local v236, v237 = v82(v89[v235](v13(v89, v235 + 1, v91[3])));
									v84 = (v237 + v235) - 1;
									local v238 = 0;
									for v309 = v235, v84 do
										v238 = v238 + 1;
										v89[v309] = v236[v238];
									end
								else
									v83 = v91[3];
								end
							elseif (v92 <= 56) then
								if (v92 <= 53) then
									if (v92 > 52) then
										local v170 = v91[2];
										local v171 = {v89[v170](v13(v89, v170 + 1, v84))};
										local v172 = 0;
										for v192 = v170, v91[4] do
											v172 = v172 + 1;
											v89[v192] = v171[v172];
										end
									else
										do
											return;
										end
									end
								elseif (v92 <= 54) then
									local v173 = v91[2];
									v89[v173](v89[v173 + 1]);
								elseif (v92 > 55) then
									local v240 = 0;
									local v241;
									while true do
										if (v240 == 0) then
											v241 = v91[2];
											v89[v241](v13(v89, v241 + 1, v91[3]));
											break;
										end
									end
								else
									v89[v91[2]] = v89[v91[3]] / v91[4];
								end
							elseif (v92 <= 59) then
								if (v92 <= 57) then
									local v174 = 0;
									local v175;
									local v176;
									local v177;
									while true do
										if (v174 == 1) then
											v177 = {};
											v176 = v10({}, {__index=function(v337, v338)
												local v339 = v177[v338];
												return v339[1][v339[2]];
											end,__newindex=function(v340, v341, v342)
												local v343 = v177[v341];
												v343[1][v343[2]] = v342;
											end});
											v174 = 2;
										end
										if (v174 == 2) then
											for v345 = 1, v91[4] do
												local v346 = 0;
												local v347;
												while true do
													if (0 == v346) then
														v83 = v83 + 1;
														v347 = v79[v83];
														v346 = 1;
													end
													if (1 == v346) then
														if (v347[1] == 59) then
															v177[v345 - 1] = {v89,v347[3]};
														else
															v177[v345 - 1] = {v60,v347[3]};
														end
														v88[#v88 + 1] = v177;
														break;
													end
												end
											end
											v89[v91[2]] = v29(v175, v176, v61);
											break;
										end
										if (v174 == 0) then
											v175 = v80[v91[3]];
											v176 = nil;
											v174 = 1;
										end
									end
								elseif (v92 > 58) then
									v89[v91[2]] = v89[v91[3]];
								else
									local v245 = v91[2];
									v89[v245] = v89[v245]();
								end
							elseif (v92 <= 60) then
								local v178 = 0;
								local v179;
								while true do
									if (0 == v178) then
										v179 = v91[2];
										v89[v179](v13(v89, v179 + 1, v91[3]));
										break;
									end
								end
							elseif (v92 == 61) then
								local v247 = v91[2];
								local v248 = v91[4];
								local v249 = v247 + 2;
								local v250 = {v89[v247](v89[v247 + 1], v89[v249])};
								for v315 = 1, v248 do
									v89[v249 + v315] = v250[v315];
								end
								local v251 = v250[1];
								if v251 then
									v89[v249] = v251;
									v83 = v91[3];
								else
									v83 = v83 + 1;
								end
							else
								v89[v91[2]][v91[3]] = v91[4];
							end
						elseif (v92 <= 73) then
							if (v92 <= 67) then
								if (v92 <= 64) then
									if (v92 > 63) then
										local v180 = v91[2];
										local v181 = v91[4];
										local v182 = v180 + 2;
										local v183 = {v89[v180](v89[v180 + 1], v89[v182])};
										for v195 = 1, v181 do
											v89[v182 + v195] = v183[v195];
										end
										local v184 = v183[1];
										if v184 then
											v89[v182] = v184;
											v83 = v91[3];
										else
											v83 = v83 + 1;
										end
									elseif (v89[v91[2]] ~= v89[v91[4]]) then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								elseif (v92 <= 65) then
									v89[v91[2]]();
								elseif (v92 > 66) then
									v89[v91[2]] = v29(v80[v91[3]], nil, v61);
								else
									local v258 = 0;
									local v259;
									while true do
										if (v258 == 0) then
											v259 = v91[2];
											v89[v259] = v89[v259](v13(v89, v259 + 1, v84));
											break;
										end
									end
								end
							elseif (v92 <= 70) then
								if (v92 <= 68) then
									if (v89[v91[2]] == v91[4]) then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								elseif (v92 == 69) then
									if (v89[v91[2]] == v89[v91[4]]) then
										v83 = v83 + 1;
									else
										v83 = v91[3];
									end
								else
									v89[v91[2]] = v91[3];
								end
							elseif (v92 <= 71) then
								if v89[v91[2]] then
									v83 = v83 + 1;
								else
									v83 = v91[3];
								end
							elseif (v92 == 72) then
								v89[v91[2]] = v91[3] ~= 0;
							else
								local v265 = v91[2];
								local v266 = v89[v91[3]];
								v89[v265 + 1] = v266;
								v89[v265] = v266[v91[4]];
							end
						elseif (v92 <= 78) then
							if (v92 <= 75) then
								if (v92 == 74) then
									v60[v91[3]] = v89[v91[2]];
								else
									do
										return v89[v91[2]];
									end
								end
							elseif (v92 <= 76) then
								v89[v91[2]] = v89[v91[3]][v91[4]];
							elseif (v92 == 77) then
								local v270 = 0;
								local v271;
								local v272;
								local v273;
								while true do
									if (v270 == 1) then
										v273 = 0;
										for v373 = v271, v91[4] do
											local v374 = 0;
											while true do
												if (v374 == 0) then
													v273 = v273 + 1;
													v89[v373] = v272[v273];
													break;
												end
											end
										end
										break;
									end
									if (v270 == 0) then
										v271 = v91[2];
										v272 = {v89[v271](v89[v271 + 1])};
										v270 = 1;
									end
								end
							else
								local v274 = 0;
								local v275;
								local v276;
								local v277;
								while true do
									if (v274 == 0) then
										v275 = v91[2];
										v276 = {v89[v275](v13(v89, v275 + 1, v84))};
										v274 = 1;
									end
									if (v274 == 1) then
										v277 = 0;
										for v375 = v275, v91[4] do
											local v376 = 0;
											while true do
												if (v376 == 0) then
													v277 = v277 + 1;
													v89[v375] = v276[v277];
													break;
												end
											end
										end
										break;
									end
								end
							end
						elseif (v92 <= 81) then
							if (v92 <= 79) then
								if not v89[v91[2]] then
									v83 = v83 + 1;
								else
									v83 = v91[3];
								end
							elseif (v92 > 80) then
								local v279 = 0;
								local v280;
								while true do
									if (v279 == 0) then
										v280 = v91[2];
										v89[v280](v89[v280 + 1]);
										break;
									end
								end
							else
								local v281 = 0;
								local v282;
								while true do
									if (v281 == 0) then
										v282 = v91[2];
										do
											return v13(v89, v282, v282 + v91[3]);
										end
										break;
									end
								end
							end
						elseif (v92 <= 82) then
							v89[v91[2]] = v89[v91[3]] * v89[v91[4]];
						elseif (v92 > 83) then
							v89[v91[2]] = v89[v91[3]] * v89[v91[4]];
						else
							v61[v91[3]] = v89[v91[2]];
						end
						v83 = v83 + 1;
					end
				end;
			end
			if (v62 == 0) then
				v63 = v59[1];
				v64 = v59[2];
				v62 = 1;
			end
		end
	end
	return v29(v28(), {}, v17)(...);
end
vv9(), ...);
